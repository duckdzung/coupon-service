{
	"info": {
		"_postman_id": "3d4cd368-b9d5-4fc9-8a97-3eea535563df",
		"name": "Coupon Service API",
		"description": "API collection for Coupon Service with full CRUD operations and apply coupon functionality",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45801032",
		"_collection_link": "https://laiducdung.postman.co/workspace/Lai-Duc-Dung's-Workspace~456e444b-bfb5-49d1-8054-258efca5c1d0/collection/45801032-3d4cd368-b9d5-4fc9-8a97-3eea535563df?action=share&source=collection_link&creator=45801032"
	},
	"item": [
		{
			"name": "Get All Coupons",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has data array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/admin/coupons",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"coupons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Coupon",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has coupon data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('code');",
							"    pm.expect(jsonData.data.code).to.eql(pm.variables.get('couponCode'));",
							"});",
							"",
							"// Save coupon code for other tests",
							"if (pm.response.code === 200) {",
							"    var responseJson = pm.response.json();",
							"    pm.environment.set('createdCouponCode', responseJson.data.code);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Generate random coupon code",
							"var randomCode = 'COUP' + Math.floor(Math.random() * 1000);",
							"pm.variables.set('couponCode', randomCode);",
							"",
							"// Set test data",
							"pm.variables.set('couponTitle', 'Test Coupon ' + randomCode);",
							"pm.variables.set('couponDescription', 'Test description for ' + randomCode);",
							"",
							"// Set dates",
							"var startDate = new Date();",
							"var endDate = new Date();",
							"endDate.setDate(endDate.getDate() + 30); // 30 days from now",
							"",
							"pm.variables.set('startTime', startDate.toISOString());",
							"pm.variables.set('endTime', endDate.toISOString());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"{{couponCode}}\",\n    \"title\": \"{{couponTitle}}\",\n    \"description\": \"{{couponDescription}}\",\n    \"discountType\": \"PERCENT\",\n    \"usageType\": \"MANUAL\",\n    \"discountValue\": 50.0,\n    \"minOrderValue\": 100.0,\n    \"maxDiscountAmount\": 50.0,\n    \"startTime\": \"{{startTime}}\",\n    \"endTime\": \"{{endTime}}\",\n    \"remainingUsage\": 100\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/admin/coupons",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"coupons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Large Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has coupon data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('code');",
							"    pm.expect(jsonData.data.code).to.eql(pm.variables.get('couponCode'));",
							"});",
							"",
							"// Save coupon code for other tests",
							"if (pm.response.code === 200) {",
							"    var responseJson = pm.response.json();",
							"    pm.environment.set('createdCouponCode', responseJson.data.code);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Generate random coupon code",
							"var randomCode = 'COUP' + Math.floor(Math.random() * 1000);",
							"pm.variables.set('couponCode', randomCode);",
							"",
							"// Set test data",
							"pm.variables.set('couponTitle', 'Test Coupon ' + randomCode);",
							"pm.variables.set('couponDescription', 'Test description for ' + randomCode);",
							"",
							"// Set dates",
							"var startDate = new Date();",
							"var endDate = new Date();",
							"endDate.setDate(endDate.getDate() + 30); // 30 days from now",
							"",
							"pm.variables.set('startTime', startDate.toISOString());",
							"pm.variables.set('endTime', endDate.toISOString());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"{{couponCode}}\",\n    \"title\": \"{{couponTitle}}\",\n    \"description\": \"{{couponDescription}}\",\n    \"discountType\": \"PERCENT\",\n    \"usageType\": \"MANUAL\",\n    \"discountValue\": 50.0,\n    \"minOrderValue\": 100.0,\n    \"maxDiscountAmount\": 50.0,\n    \"startTime\": \"{{startTime}}\",\n    \"endTime\": \"{{endTime}}\",\n    \"remainingUsage\": 100\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/redis-data/create-large-data/:sizeMB",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"redis-data",
						"create-large-data",
						":sizeMB"
					],
					"variable": [
						{
							"key": "sizeMB",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Large Data Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has coupon data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('code');",
							"    pm.expect(jsonData.data.code).to.eql(pm.variables.get('couponCode'));",
							"});",
							"",
							"// Save coupon code for other tests",
							"if (pm.response.code === 200) {",
							"    var responseJson = pm.response.json();",
							"    pm.environment.set('createdCouponCode', responseJson.data.code);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Generate random coupon code",
							"var randomCode = 'COUP' + Math.floor(Math.random() * 1000);",
							"pm.variables.set('couponCode', randomCode);",
							"",
							"// Set test data",
							"pm.variables.set('couponTitle', 'Test Coupon ' + randomCode);",
							"pm.variables.set('couponDescription', 'Test description for ' + randomCode);",
							"",
							"// Set dates",
							"var startDate = new Date();",
							"var endDate = new Date();",
							"endDate.setDate(endDate.getDate() + 30); // 30 days from now",
							"",
							"pm.variables.set('startTime', startDate.toISOString());",
							"pm.variables.set('endTime', endDate.toISOString());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"{{couponCode}}\",\n    \"title\": \"{{couponTitle}}\",\n    \"description\": \"{{couponDescription}}\",\n    \"discountType\": \"PERCENT\",\n    \"usageType\": \"MANUAL\",\n    \"discountValue\": 50.0,\n    \"minOrderValue\": 100.0,\n    \"maxDiscountAmount\": 50.0,\n    \"startTime\": \"{{startTime}}\",\n    \"endTime\": \"{{endTime}}\",\n    \"remainingUsage\": 100\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/redis-data/get-large-data/:sizeMB",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"redis-data",
						"get-large-data",
						":sizeMB"
					],
					"variable": [
						{
							"key": "sizeMB",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Coupon by Code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has coupon data with correct code\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('code');",
							"    pm.expect(jsonData.data.code).to.eql(pm.environment.get('createdCouponCode') || 'SALE20');",
							"});",
							"",
							"pm.test(\"Coupon has all required fields\", function () {",
							"    var coupon = pm.response.json().data;",
							"    pm.expect(coupon).to.have.all.keys(",
							"        'code', 'title', 'description', 'discountType', 'usageType',",
							"        'discountValue', 'minOrderValue', 'maxDiscountAmount',",
							"        'startTime', 'endTime', 'remainingUsage'",
							"    );",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/coupons/:code",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"coupons",
						":code"
					],
					"variable": [
						{
							"key": "code",
							"value": "COUP96"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Coupon",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Coupon title was updated\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.title).to.include('Updated');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Set updated data",
							"pm.variables.set('updatedTitle', 'Updated Test Coupon');",
							"pm.variables.set('updatedDescription', 'Updated description for testing');",
							"",
							"// Set dates",
							"var startDate = new Date();",
							"var endDate = new Date();",
							"endDate.setDate(endDate.getDate() + 60); // 60 days from now",
							"",
							"pm.variables.set('updatedStartTime', startDate.toISOString());",
							"pm.variables.set('updatedEndTime', endDate.toISOString());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"{{updatedTitle}}\",\n    \"description\": \"{{updatedDescription}}\",\n    \"discountType\": \"FIXED\",\n    \"usageType\": \"AUTO\",\n    \"minOrderValue\": 150.0,\n    \"maxDiscountAmount\": 75.0,\n    \"startTime\": \"{{updatedStartTime}}\",\n    \"endTime\": \"{{updatedEndTime}}\",\n    \"remainingUsage\": 1000\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/admin/coupons/:code",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"coupons",
						":code"
					],
					"variable": [
						{
							"key": "code",
							"value": "COUP838"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Manual Apply Coupon 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has discount amount\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('discountAmount');",
							"    pm.expect(jsonData.data.discountAmount).to.be.a('number');",
							"    pm.expect(jsonData.data.discountAmount).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Response has coupon data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('coupon');",
							"    pm.expect(jsonData.data.coupon).to.have.property('code');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"orderAmount\": {{orderAmount}},\n    \"couponCode\": \"COUP838\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/coupons/apply",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"coupons",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "Manual Apply Coupon 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has discount amount\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('discountAmount');",
							"    pm.expect(jsonData.data.discountAmount).to.be.a('number');",
							"    pm.expect(jsonData.data.discountAmount).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Response has coupon data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('coupon');",
							"    pm.expect(jsonData.data.coupon).to.have.property('code');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"orderAmount\": {{orderAmount}},\n    \"couponCode\": \"COUP182\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/coupons/apply",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"coupons",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Available Coupon For Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has discount amount\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('discountAmount');",
							"    pm.expect(jsonData.data.discountAmount).to.be.a('number');",
							"    pm.expect(jsonData.data.discountAmount).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Response has coupon data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('coupon');",
							"    pm.expect(jsonData.data.coupon).to.have.property('code');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"orderAmount\": 100000,\n  \"discountType\": \"PERCENTAGE\",    \n  \"page\": 0,\n  \"size\": 10,\n  \"sortBy\": \"discountValue\",\n  \"sortDirection\": \"DESC\"\n}\n"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/coupons/available?orderAmount=200000&discountType=PERCENT&page=0&size=10&sortBy=discountValue&sortDirection=DESC",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"coupons",
						"available"
					],
					"query": [
						{
							"key": "orderAmount",
							"value": "200000"
						},
						{
							"key": "discountType",
							"value": "PERCENT"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sortBy",
							"value": "discountValue"
						},
						{
							"key": "sortDirection",
							"value": "DESC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Auto Apply Coupon",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has discount amount\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('discountAmount');",
							"    pm.expect(jsonData.data.discountAmount).to.be.a('number');",
							"    pm.expect(jsonData.data.discountAmount).to.be.above(0);",
							"});",
							"",
							"pm.test(\"Response has coupon data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('coupon');",
							"    pm.expect(jsonData.data.coupon).to.have.property('code');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"orderAmount\": {{orderAmount}}\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/coupons/apply",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"coupons",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Coupon",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Delete success message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('Delete coupon successfully');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/admin/coupons/{{testCouponCode}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"coupons",
						"{{testCouponCode}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error Test - Get Non-existent Coupon",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response has error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.false;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/coupons/NONEXISTENT",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"coupons",
						"NONEXISTENT"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error Test - Invalid Coupon Code Length",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response has validation error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.false;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v1/coupons/AB",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"coupons",
						"AB"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default test coupon code if not set",
					"if (!pm.environment.get('testCouponCode')) {",
					"    pm.environment.set('testCouponCode', pm.environment.get('createdCouponCode') || 'SALE20');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test for all requests",
					"pm.test(\"Response has Content-Type header\", function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});"
				]
			}
		}
	]
}